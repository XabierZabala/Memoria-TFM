package sia.tfm.dbtester.ResultManager;

import java.io.File;
import java.nio.file.Path;
import java.util.ArrayList;
import java.util.HashMap;

public class ResultManager {
	
	/**
	 * Esta clase engloba los métodos necesarios para gestionar
	 * los resultados de las pruebas realizadas.
	 * @version: 09/07/2016
	 * @author Xabier Zabala
	 */
	
	private ResultManager(){};
	
	/**
	 * Método que genera un array con directorios donde se almacenan los resultados.
	 * @param dirs Conjunto de directorios donde se almacenaran los resultados.
	 * @return String[] Arreglo de directorios en formato String
	 */
	
	public static String[] directoryArray(String... dirs){
		
		return dirs.clone();
	
	}
	
	//
	
	/**
	 * Método que comprueba la existencia de los directorios donde se
	 * almacenan los resultados de los test y en caso no existir los crea.
	 * @param paths Listado de rutas donde se almacenan los resultados de los test.
	 */
	
	public static void configureDirectories(String... paths){
		
		for(String path: paths){
			
			File dir = new File(path);
			if(!dir.exists() || !dir.isDirectory()){
				dir.mkdirs();
			}
		}	
	}
	
	/**
	 * Método que crea el fichero de resultados correspondiente a la BD
	 * seleccionada
	 * @param bd Identificador de la base de datos seleccionada.
	 * @return Path La ruta del fichero de resultados generado.
	 */
	/*
	public static Path createResultFile(String bd){
		
		if(bd.equals("0")){
			
		}else if(bd.equals("1")){
			
		}else if(bd.equals("2")){
			
		}else{
			System.out.println("La DB seleccionada no existe");
			System.exit(0);
		}
		
	}*/

}
